% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slingshot.R
\name{get_curves}
\alias{get_curves}
\title{Construct Smooth Curves for Each Lineage}
\usage{
get_curves(X, clus.labels, lineages, shrink = TRUE, extend = "y",
  reweight = TRUE, drop.multi = TRUE, thresh = 0.001, maxit = 15,
  stretch = 2, smoother = "smooth.spline", shrink.method = "cosine", ...)
}
\arguments{
\item{X}{numeric, the \code{n x p} matrix of samples in a reduced dimensionality
space.}

\item{clus.labels}{character, a vector of length n denoting cluster labels.}

\item{lineages}{list, denotes which lineages each cluster is a part of and
contains the \code{K x K} connectivity matrix constructed on the clusters by
\code{\link{get_lineages}}.}

\item{shrink}{logical or numeric between 0 and 1, determines whether and how 
much to shrink branching lineages toward their average prior to the split.}

\item{extend}{character, how to handle root and leaf clusters of lineages when
constructing the initial, piece-wise linear curve. Accepted values are 'y'
(default), 'n', and 'pc1'. See 'Details' for more.}

\item{reweight}{logical, whether to allow cells shared between lineages to be
reweighted during curve-fitting. If \code{TRUE}, cells shared between
lineages will be weighted by: distance to nearest curve / distance to curve.}

\item{drop.multi}{logical, whether to drop shared cells from lineages which do 
not fit them well. If \code{TRUE}, shared cells with a distance to one 
lineage above the 90th percentile and another below the 50th will be dropped
from the further lineage.}

\item{thresh}{numeric, determines the convergence criterion. Percent change in
the total distance from cells to their projections along curves must be less
than \code{thresh}. Default is \code{0.001}, similar to
\code{\link{principal.curve}}.}

\item{maxit}{numeric, maximum number of iterations, see
\code{\link{principal.curve}}.}

\item{stretch}{numeric factor by which curves can be extrapolated beyond
endpoints. Default is \code{2}, see \code{\link{principal.curve}}.}

\item{smoother, }{choice of scatter plot smoother. Same as
\code{\link{principal.curve}}, but \code{"lowess"} option is replaced with
\code{"loess"} for additional flexibility.}

\item{shrink.method}{character denoting how to determine the appropriate amount
of shrinkage for a branching lineage. Accepted values are the same as for
\code{kernel} in \code{\link{density}} (default is \code{"cosine"}), as well 
as \code{"tricube"} and \code{"density"}. See 'Details' for more.}
}
\value{
A list of length \code{L}, equal to the number of lineages. Each element
  is an object of class \code{principal.curve} containing the following objects: 
  \itemize{ \item{\code{s}}{ a matrix of points along the curve corresponding to
  the projections of points in \code{X} onto the curve, ordered by pseudotime.}
  \item{\code{lambda}}{ a vector of pseudotime values in the same order as 
  \code{s}, representing each point's arclength along the curve.}
  \item{\code{dist}}{ the total squared distance between points used in the 
  construction of the curve and their projections onto the curve.}
  \item{\code{pseudotime}}{ a vector of pseudotime values of length \code{n},
  containing \code{NA} values for cells not represented by this lineage} }
}
\description{
This function takes a reduced data matrix \code{n x p}, a vector of
  cluster identities (optionally including -1's for "unclustered"), and a set of
  lineages consisting of paths through a forest constructed on the clusters. It
  constructs smooth curves for each lineage and returns the points along these
  curves corresponding to the orthogonal projections of each data point, along
  with corresponding arclength (\code{pseudotime} or \code{lambda}) values.
}
\details{
When there is only a single lineage, the curve-fitting algorithm is
  identical to that of \code{\link{principal.curve}}. When there are multiple
  lineages and \code{shrink=TRUE}, an additional step is added to the iterative 
  procedure, forcing curves to be similar in the neighborhood of shared points
  (ie., before they branch).

The \code{extend} argument determines how to construct the piece-wise
  linear curve used to initiate the recursive algorithm. The initial curve is
  always based on the lines between cluster centers and if \code{extend = 'n'}, 
  this curve will terminate at the center of the endpoint clusters. Setting 
  \code{extend = 'y'} will allow the first and last segments to extend beyond
  the cluster center to the orthogonal projection of the furthest point. Setting
  \code{extend = 'pc1'} is similar to \code{'y'}, but uses the first principal
  component of the cluster to determine the direction of the curve beyond the
  cluster center. These options typically have little to no impact on the final
  curve, but can occasionally help with stability issues.

*** Explain shrink.method ***

*** acknowledge princurve ***
}
\examples{
data("slingshot_example")
lin <- get_lineages(X, clus.labels, start.clus = 'a')
crv <- get_curves(X, clus.labels, lin)
plot_curves(X, clus.labels, crv)

}

